"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53],{6053:function(t,e,a){a.d(e,{default:function(){return r}});class r extends Phaser.Scene{preload(){}create(){try{this.stations=[],this.npcs=[],this.createBackground(),this.createPlayer(),this.setupCollisions(),this.cameras.main.startFollow(this.player,!0,.5,.5),this.cursors=this.input.keyboard.createCursorKeys(),this.createAnimations(),this.createWorkStations(),this.createNPCs(),this.createUI(),this.generateQuest(),this.add.text(400,50,"Use arrow keys to move",{font:"16px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5).setScrollFactor(0),this.add.text(400,80,"Press SPACE to interact with stations",{font:"16px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5).setScrollFactor(0)}catch(t){console.error("Error in create method:",t),this.add.text(400,300,"SimWork Office Simulation",{font:"24px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5),this.add.text(400,350,"Use arrow keys to navigate (demo mode)",{font:"16px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5)}}createBackground(){try{this.add.rectangle(0,0,1600,1200,this.colors.dark).setOrigin(0,0);for(let t=0;t<1600;t+=50)for(let e=0;e<1200;e+=50)this.add.line(0,0,t,0,t,1200,this.colors.primary,.1).setOrigin(0,0),this.add.line(0,0,0,e,1600,e,this.colors.primary,.1).setOrigin(0,0);for(let t=0;t<20;t++){let t=Phaser.Math.Between(100,1500),e=Phaser.Math.Between(100,1100),a=Phaser.Math.Between(5,15),r=this.add.circle(t,e,a,this.colors.accent,.3);this.tweens.add({targets:r,alpha:.1,scale:.8,duration:Phaser.Math.Between(1500,3e3),yoyo:!0,repeat:-1})}this.createWallObjects()}catch(t){console.error("Error creating background:",t)}}createWallObjects(){try{this.walls=this.physics.add.staticGroup(),this.walls.add(this.add.rectangle(0,0,1600,20,this.colors.primary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(0,0,20,1200,this.colors.primary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(1580,0,20,1200,this.colors.primary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(0,1180,1600,20,this.colors.primary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(400,300,200,10,this.colors.secondary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(800,500,10,200,this.colors.secondary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(300,700,300,10,this.colors.secondary,.5).setOrigin(0,0)),this.walls.add(this.add.rectangle(1e3,300,10,300,this.colors.secondary,.5).setOrigin(0,0))}catch(t){console.error("Error creating wall objects:",t)}}setupCollisions(){try{this.player&&this.walls&&this.physics.add.collider(this.player,this.walls)}catch(t){console.error("Error setting up collisions:",t)}}createPlayer(){try{let t=this.make.graphics({x:0,y:0});t.fillStyle(this.colors.secondary,1),t.fillCircle(16,16,14),t.fillStyle(this.colors.light,1),t.fillCircle(16,16,8),t.fillStyle(this.colors.accent,1),t.fillCircle(16,16,4),t.generateTexture("player",32,32),this.player=this.physics.add.sprite(400,300,"player"),this.player.setCollideWorldBounds(!0);let e=this.player.preFX.addGlow(this.colors.secondary,8,0,!1,.1,16);this.tweens.add({targets:e,outerStrength:1,yoyo:!0,repeat:-1,duration:1500})}catch(t){if(console.error("Error creating player:",t),this.player=this.physics.add.sprite(400,300,"player"),!this.textures.exists("player")){let t=this.make.graphics({x:0,y:0});t.fillStyle(43775,1),t.fillCircle(16,16,16),t.generateTexture("simple-player",32,32),this.player.setTexture("simple-player")}this.player.setCollideWorldBounds(!0)}}update(){this.handlePlayerMovement(),this.checkStationInteractions(),this.updateNPCs()}createAnimations(){try{this.time.addEvent({delay:500,callback:()=>{if(this.player){let t=this.player.tintTopLeft;16777215===t?this.player.setTint(11184895):this.player.setTint(16777215)}},callbackScope:this,loop:!0})}catch(t){console.error("Error creating animations:",t)}}createWorkStations(){try{[{x:200,y:150,type:"dev",color:this.colors.primary,name:"Developer Station",icon:"\uD83D\uDCBB"},{x:600,y:150,type:"design",color:this.colors.secondary,name:"Designer Station",icon:"\uD83C\uDFA8"},{x:400,y:400,type:"pm",color:this.colors.accent,name:"PM Station",icon:"\uD83D\uDCCA"},{x:200,y:450,type:"data",color:43775,name:"Data Entry Station",icon:"\uD83D\uDCDD"},{x:600,y:450,type:"ai",color:16711850,name:"AI Engineer Station",icon:"\uD83E\uDD16"}].forEach(t=>{let e=this.make.graphics({x:0,y:0});e.fillStyle(t.color,.8),e.fillRoundedRect(0,0,60,60,10),e.lineStyle(2,16777215,.8),e.strokeRoundedRect(0,0,60,60,10),e.fillStyle(16777215,.2),e.fillRoundedRect(10,10,40,40,5);let a="station-".concat(t.type);e.generateTexture(a,60,60);let r=this.physics.add.sprite(t.x,t.y,a);r.setImmovable(!0),r.stationType=t.type,r.stationName=t.name,this.add.text(t.x,t.y+40,"".concat(t.icon," ").concat(t.name),{font:"12px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5),this.tweens.add({targets:r,scale:{from:.95,to:1.05},alpha:{from:.8,to:1},duration:1500,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"}),this.stations.push(r),this.player&&this.player.body&&this.physics.add.overlap(this.player,r,this.handleStationInteraction,null,this)})}catch(t){console.error("Error creating work stations:",t)}}createNPCs(){try{[{x:300,y:200,color:16746496,icon:"\uD83D\uDC68‍\uD83D\uDCBC",name:"Manager",dialogue:"Welcome to SimWork! Complete tasks to improve your skills."},{x:500,y:300,color:52479,icon:"\uD83D\uDC69‍\uD83C\uDFEB",name:"Mentor",dialogue:"Each station offers different challenges. Try them all!"},{x:250,y:400,color:4521796,icon:"\uD83D\uDC68‍\uD83D\uDCBB",name:"Colleague",dialogue:"The Developer Station has coding challenges. Good luck!"}].forEach((t,e)=>{let a=this.make.graphics({x:0,y:0});a.fillStyle(t.color,.9),a.fillCircle(16,10,8),a.fillRoundedRect(8,18,16,20,4);let r="npc-".concat(e);a.generateTexture(r,32,40);let i=this.physics.add.sprite(t.x,t.y,r);i.setImmovable(!0),i.name=t.name,i.dialogue=t.dialogue,this.add.text(t.x,t.y-30,"".concat(t.icon," ").concat(t.name),{font:"12px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5),this.tweens.add({targets:i,y:t.y+5,duration:2e3,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"}),this.npcs.push(i),this.player&&this.player.body&&this.physics.add.overlap(this.player,i,this.handleNPCInteraction,null,this),this.time.addEvent({delay:5e3+5e3*Math.random(),callback:()=>{let e=this.add.graphics();e.fillStyle(16777215,.7),e.fillRoundedRect(t.x-50,t.y-60,100,30,10);let a=["\uD83D\uDCA1","\uD83D\uDCAC","\uD83D\uDD0D","✨","\uD83D\uDE80"],r=this.add.text(t.x,t.y-45,a[Math.floor(Math.random()*a.length)],{font:"16px Arial",align:"center"}).setOrigin(.5);this.tweens.add({targets:[e,r],alpha:0,delay:1500,duration:500,onComplete:()=>{e.destroy(),r.destroy()}})},loop:!0})})}catch(t){console.error("Error creating NPCs:",t)}}createUI(){try{let t=this.add.container(400,550);t.setScrollFactor(0);let e=this.add.graphics();e.fillGradientStyle(this.colors.primary,this.colors.primary,this.colors.secondary,this.colors.secondary,.7,.7,.7,.7),e.fillRoundedRect(-300,-25,600,50,10);let a=this.add.graphics();a.lineStyle(2,this.colors.accent,1),a.strokeRoundedRect(-300,-25,600,50,10);for(let e=0;e<3;e++){let a=this.add.circle(-280+15*e,-15,3,this.colors.accent,1);t.add(a)}let r=this.add.text(-270,-15,"CURRENT MISSION:",{font:"12px Arial",fill:"#ffffff",align:"left"}).setOrigin(0,.5);this.questText=this.add.text(-120,-15,"No active quest",{font:"14px Arial",fill:"#ffffff",align:"left"}).setOrigin(0,.5),t.add([e,a,r,this.questText]),this.tweens.add({targets:a,alpha:{from:.4,to:1},duration:1500,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"}),this.createMiniMap()}catch(t){console.error("Error creating UI:",t)}}createMiniMap(){try{let t=this.add.container(700,100);t.setScrollFactor(0);let e=this.add.graphics();e.fillStyle(this.colors.dark,.7),e.fillRoundedRect(-50,-50,100,100,5),e.lineStyle(1,this.colors.primary,.8),e.strokeRoundedRect(-50,-50,100,100,5),t.add(e),this.stations.forEach(e=>{let a=e.x/1600*80-40,r=e.y/1200*80-40,i=this.add.circle(a,r,3,this.getColorForStationType(e.stationType),1);t.add(i)});let a=this.add.circle(0,0,4,this.colors.accent,1);t.add(a),this.events.on("update",()=>{this.player&&(a.x=this.player.x/1600*80-40,a.y=this.player.y/1200*80-40)});let r=this.add.text(0,-65,"MINI-MAP",{font:"10px Arial",fill:"#ffffff",align:"center"}).setOrigin(.5);t.add(r)}catch(t){console.error("Error creating mini-map:",t)}}getColorForStationType(t){return({dev:this.colors.primary,design:this.colors.secondary,pm:this.colors.accent,data:43775,ai:16711850})[t]||16777215}handlePlayerMovement(){try{if(!this.player||!this.cursors)return;if(this.player.setVelocity(0),this.cursors.left.isDown?(this.player.setVelocityX(-160),this.player.flipX=!0):this.cursors.right.isDown&&(this.player.setVelocityX(160),this.player.flipX=!1),this.cursors.up.isDown?this.player.setVelocityY(-160):this.cursors.down.isDown&&this.player.setVelocityY(160),0!==this.player.body.velocity.x||0!==this.player.body.velocity.y){if(.3>Math.random()){let t=this.add.circle(this.player.x,this.player.y,3,this.colors.accent,.7);this.tweens.add({targets:t,alpha:0,scale:.5,duration:500,onComplete:()=>{t.destroy()}})}if(0!==this.player.body.velocity.x){let t=this.player.body.velocity.x>0?.1:-.1;this.player.rotation=Phaser.Math.Linear(this.player.rotation,t,.1)}else this.player.rotation=Phaser.Math.Linear(this.player.rotation,0,.1)}else this.player.rotation=Phaser.Math.Linear(this.player.rotation,0,.1)}catch(t){console.error("Error handling player movement:",t)}}checkStationInteractions(){}updateNPCs(){try{this.npcs.forEach(t=>{if(this.player){let e=Phaser.Math.Distance.Between(t.x,t.y,this.player.x,this.player.y);if(e<150){let a=this.player.x<t.x;if(t.flipX=a,e<80&&.01>Math.random()){let e=this.add.text(t.x,t.y-40,"!",{font:"bold 24px Arial",fill:"#FFFF00"}).setOrigin(.5);this.tweens.add({targets:e,y:e.y-20,alpha:{from:1,to:0},duration:800,onComplete:()=>e.destroy()})}}}})}catch(t){console.error("Error updating NPCs:",t)}}handleStationInteraction(t,e){try{Phaser.Input.Keyboard.JustDown(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE))&&(console.log("Interacting with ".concat(e.stationName)),this.generateQuestForStation(e.stationType),this.showStationInterface(e.stationType),this.createInteractionEffect(e.x,e.y,this.getColorForStationType(e.stationType)))}catch(t){console.error("Error handling station interaction:",t)}}handleNPCInteraction(t,e){try{Phaser.Input.Keyboard.JustDown(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE))&&(console.log("Talking to ".concat(e.name,": ").concat(e.dialogue)),this.showDialogue(e.name,e.dialogue),this.createInteractionEffect(e.x,e.y,16777215))}catch(t){console.error("Error handling NPC interaction:",t)}}createInteractionEffect(t,e,a){try{let r=this.add.circle(t,e,10,a,.7);this.tweens.add({targets:r,radius:50,alpha:0,duration:500,onComplete:()=>r.destroy()});for(let r=0;r<8;r++){let i=r/8*Math.PI*2,s=t+20*Math.cos(i),o=e+20*Math.sin(i),l=this.add.circle(s,o,3,a,.8);this.tweens.add({targets:l,x:s+30*Math.cos(i),y:o+30*Math.sin(i),alpha:0,duration:500,onComplete:()=>l.destroy()})}}catch(t){console.error("Error creating interaction effect:",t)}}generateQuest(){let t=["Fix the bug in the code","Design a new logo","Create a project timeline","Process the data entries","Optimize the AI model"];this.activeQuest=t[Math.floor(Math.random()*t.length)],this.questText.setText("Current Quest: ".concat(this.activeQuest))}generateQuestForStation(t){let e={dev:["Debug the function that calculates user metrics","Implement a new feature for the dashboard","Optimize the database query performance"],design:["Create a new icon set for the mobile app","Redesign the landing page for better conversion","Develop a color scheme for the new product"],pm:["Create a sprint plan for the next two weeks","Prioritize the backlog items","Conduct a retrospective meeting"],data:["Clean and normalize the customer dataset","Enter the quarterly sales figures","Validate the product inventory data"],ai:["Train a sentiment analysis model","Debug the recommendation algorithm","Optimize the natural language processing pipeline"]}[t]||["Complete a general task"];this.activeQuest=e[Math.floor(Math.random()*e.length)],this.questText.setText("Current Quest: ".concat(this.activeQuest))}showStationInterface(t){try{let e=this.add.rectangle(400,300,600,400,0,.7);e.setScrollFactor(0);let a=this.add.graphics();a.lineStyle(2,this.getColorForStationType(t),1),a.strokeRect(100,100,600,400),a.setScrollFactor(0);let r=this.add.text(400,130,"".concat(t.toUpperCase()," STATION"),{font:"bold 24px Arial",fill:"#ffffff"});r.setOrigin(.5),r.setScrollFactor(0);let i=this.add.text(400,170,{dev:"Complete coding challenges and debug software issues.",design:"Create visual assets and improve user interfaces.",pm:"Manage project timelines and coordinate team efforts.",data:"Process and analyze important data sets.",ai:"Develop and optimize machine learning models."}[t]||"Complete tasks at this station.",{font:"16px Arial",fill:"#ffffff",align:"center",wordWrap:{width:500}});i.setOrigin(.5),i.setScrollFactor(0);let s=this.add.rectangle(650,130,30,30,16711680,.8);s.setScrollFactor(0),s.setInteractive({useHandCursor:!0});let o=this.add.text(650,130,"X",{font:"bold 16px Arial",fill:"#ffffff"});o.setOrigin(.5),o.setScrollFactor(0);let l=this.add.container(0,0,[e,a,r,i,s,o]);l.setScrollFactor(0),s.on("pointerdown",()=>{l.destroy()}),this.time.delayedCall(5e3,()=>{l.destroy()})}catch(t){console.error("Error showing station interface:",t)}}showDialogue(t,e){try{let a=this.add.rectangle(400,500,700,120,0,.8);a.setScrollFactor(0);let r=this.add.graphics();r.lineStyle(2,16777215,.8),r.strokeRoundedRect(50,440,700,120,10),r.setScrollFactor(0);let i=this.add.rectangle(120,440,140,30,7209215,1);i.setScrollFactor(0);let s=this.add.text(120,440,t,{font:"bold 16px Arial",fill:"#ffffff"});s.setOrigin(.5),s.setScrollFactor(0);let o=this.add.text(400,500,"",{font:"18px Arial",fill:"#ffffff",align:"left",wordWrap:{width:650}});o.setOrigin(.5),o.setScrollFactor(0);let l="",n=0,c=this.time.addEvent({delay:30,callback:()=>{l+=e[n],o.setText(l),++n===e.length&&c.destroy()},repeat:e.length-1}),h=this.add.container(0,0,[a,r,i,s,o]);h.setScrollFactor(0),this.time.delayedCall(6e3,()=>{h.destroy()}),this.input.on("pointerdown",()=>{h.active&&(n<e.length?(c.destroy(),o.setText(e),n=e.length):h.destroy())},this)}catch(t){console.error("Error showing dialogue:",t)}}constructor(){super("GameScene"),this.player=null,this.cursors=null,this.stations=[],this.npcs=[],this.activeQuest=null,this.questText=null,this.colors={primary:7209215,secondary:49151,accent:65416,dark:657946,light:14737663}}}}}]);